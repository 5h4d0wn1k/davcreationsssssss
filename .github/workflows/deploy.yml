name: Build and Deploy to VPS
on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        frontend: [customer-frontend, admin-frontend, superadmin-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.frontend }}/package-lock.json
      - name: Install dependencies
        working-directory: ./${{ matrix.frontend }}
        run: npm ci
      - name: Build frontend
        working-directory: ./${{ matrix.frontend }}
        run: npm run build
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.frontend }}-build
          path: |
            ${{ matrix.frontend }}/.next/
            ${{ matrix.frontend }}/public/
            ${{ matrix.frontend }}/package.json
            ${{ matrix.frontend }}/package-lock.json
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          passphrase: ${{ secrets.VPS_KEY_PASSPHRASE }}
          script: |
            set -e
            WORK_DIR="/var/www/dev.davcreations.in/davcreationsssssss"
            # Ensure PM2 is installed globally
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2 globally..."
              npm install -g pm2
            fi
            # Create work directory if it does not exist
            mkdir -p "$WORK_DIR"
            # Deploy each frontend build
            for frontend in customer-frontend admin-frontend superadmin-frontend; do
              echo "Deploying $frontend..."
              # Create frontend subdirectory
              mkdir -p "$WORK_DIR/$frontend"
              # Sync built files from artifact dir
              rsync -avz --delete "./artifacts/$frontend-build/" "$WORK_DIR/$frontend/"
              # Install production dependencies inside target dir
              cd "$WORK_DIR/$frontend"
              npm ci --only=production
              cd -
            done
            # Restart all apps using PM2 and the ecosystem file that already exists on VPS
            cd "$WORK_DIR"
            pm2 startOrRestart ecosystem.config.js
            pm2 save