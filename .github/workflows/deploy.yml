name: Build and Deploy to VPS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        frontend: [customer-frontend, admin-frontend, superadmin-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ matrix.frontend }}/package-lock.json

      - name: Install dependencies
        working-directory: ./${{ matrix.frontend }}
        run: npm ci

      - name: Build frontend
        working-directory: ./${{ matrix.frontend }}
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.frontend }}-build
          path: |
            ${{ matrix.frontend }}/.next/
            ${{ matrix.frontend }}/public/
            ${{ matrix.frontend }}/package.json
            ${{ matrix.frontend }}/package-lock.json
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_PRIVATE_KEY }}
          script: |
            set -e
            WORK_DIR="/var/www/dev.davcreations.in/davcreationsssssss"
            
            echo "=== Starting deployment ==="
            
            # Ensure PM2 is installed globally
            if ! command -v pm2 &> /dev/null; then
              echo "Installing PM2 globally..."
              npm install -g pm2
            fi
            
            # Create work directory if it does not exist
            mkdir -p "$WORK_DIR"
            
            # Ensure log directory exists
            mkdir -p /var/log/pm2
            
            # Deploy each frontend build
            for frontend in customer-frontend admin-frontend superadmin-frontend; do
              echo "=== Deploying $frontend ==="
              
              # Create frontend subdirectory
              mkdir -p "$WORK_DIR/$frontend"
              
              # Remove old files except node_modules
              find "$WORK_DIR/$frontend" -maxdepth 1 -not -name 'node_modules' -delete
              
              # Sync built files from artifact dir
              if [ -d "./artifacts/$frontend-build" ]; then
                cp -r ./artifacts/$frontend-build/* "$WORK_DIR/$frontend/"
                echo "✓ Copied $frontend build files"
              else
                echo "✗ Artifact directory for $frontend not found!"
                exit 1
              fi
              
              # Install production dependencies
              cd "$WORK_DIR/$frontend"
              npm ci --only=production --legacy-peer-deps
              echo "✓ Installed dependencies for $frontend"
              cd -
            done
            
            # Copy ecosystem config to work directory
            cp ./ecosystem.config.js "$WORK_DIR/ecosystem.config.js"
            echo "✓ Copied ecosystem.config.js"
            
            # Stop existing PM2 processes for these apps
            pm2 delete customer-frontend admin-frontend superadmin-frontend || true
            
            # Start or restart all apps using PM2
            cd "$WORK_DIR"
            pm2 start ecosystem.config.js --name "davcreationsssssss"
            pm2 save
            echo "✓ Started all applications with PM2"
            
            # Show PM2 status
            pm2 status
            
            echo "=== Deployment completed successfully ==="